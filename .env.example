# Example environment variables for OpenDevBot
# Copy this file to .env and fill in secrets. DO NOT commit your real .env to source control.

# Twitch
TWITCH_CLIENT_ID=
TWITCH_CLIENT_SECRET=
TWITCH_EVENTSUB_SECRET= # random secret for EventSub signature verification
TWITCH_REDIRECT_URL=http://localhost:3000/api/v1/auth/twitch/callback

# Discord / webhooks
DEV_DISCORD_BOT_TOKEN=
DEV_DISCORD_CLIENT_ID=
DEV_DISCORD_CLIENT_SECRET=
DEV_DISCORD_GUILD_ID=
DEV_DISCORD_WEBHOOK_ID=
DEV_DISCORD_WEBHOOK_TOKEN=
DEV_DISCORD_WEBHOOK_URL=
DEV_DISCORD_ERROR_LOGS_ID=
DEV_DISCORD_ERROR_WEBHOOK=
DEV_DISCORD_PROMOTE_WEBHOOK_ID=
DEV_DISCORD_PROMOTE_WEBHOOK_TOKEN=
DEV_DISCORD_TWITCH_ACTIVITY_ID=
DEV_DISCORD_TWITCH_ACTIVITY_TOKEN=
DEV_DISCORD_FEATURE_REQUEST=
DEV_DISCORD_FEATURE_REQUEST_ID=
DEV_DISCORD_FEATURE_REQUEST_TOKEN=
DISCORD_COMMAND_USAGE_ID=
DISCORD_COMMAND_USAGE_TOKEN=
BUG_REPORT_WEBHOOK_ID=
BUG_REPORT_WEBHOOK_TOKEN=

# Server & logging
PORT=3000
PROD_LOG_FILE=./logs/prod.log
DEV_LOG_FILE=./logs/dev.log

# MongoDB (choose one)
# For production (when Enviroment=prod) set MONGO_URI
MONGO_USER=
MONGO_PASS=
MONGO_DB=
MONGO_URI=

# For local Docker Compose (dev), use DOCKER_URI pointing to the published mongo port
DOCKER_URI=mongodb://localhost:27017/opendevbot

# Feature flags / environment (note the project uses the misspelled 'Enviroment')
Enviroment=dev # allowed: dev | debug | prod
ENABLE_CHAT=true
ENABLE_EVENTSUB=true

# Optional third-party keys
GUILDED_TOKEN=
NEXON_API_KEY=
DEV_NEXON_API_KEY=
NITRADO_LONGLIFE_TOKEN=

# Notes:
# - Keep this file as a template. Never commit your real .env with secrets.
# - If you run the app inside Docker Compose as a service, prefer DOCKER_URI=mongodb://mongodb:27017/opendevbot